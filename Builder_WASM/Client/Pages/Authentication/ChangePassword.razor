@page "/authenticate/changepassword"

<div class="row justify-content-center">
    <div class="col-xl-4 col-md-6 col-sm-12">
        <div class="card text-white bg-secondary">
            <div class="card-header text-center">
                <h4>@AuthenticationService.User.Name</h4>
                <h6>Change Password</h6>
            </div>
            <div class="card-body">
                <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    
                    <div class="form-group mb-3">
                        <InputText @bind-Value="model.NewPassword" type="password" class="form-control" placeholder="New password" />
                        <ValidationMessage For="@(() => model.NewPassword)" />
                    </div>
                     <div class="form-group mb-3">
                        <InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control" placeholder="Confirm password" />
                        <ValidationMessage For="@(() => model.ConfirmPassword)" />
                    </div>

                    <button class="btn btn-primary">
                        @if (loading)
                        {
                            <span class="spinner-border spinner-border-sm mr-1"></span>
                        }
                        Change
                    </button>
                    @if (!string.IsNullOrEmpty(error))
                    {
                        <div class="alert alert-danger mt-3 mb-0">@error</div>
                    }
                </EditForm>
            </div>

        </div>
    </div>
</div>

@code {
    AuthenticateRequestChangePassword model = new AuthenticateRequestChangePassword();
    private bool loading;
    private string error = string.Empty;

    protected override void OnInitialized()
    {
        model.Id = AuthenticationService.User.Id;
        model.Username = AuthenticationService.User.Name;
    }




    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            if (model.NewPassword == model.ConfirmPassword)
            {
                var mess = await HttpService.Put<ResponseMessage>("account/changepassword/" + AuthenticationService.User.Id, model);
                if (mess.Message == "Change password was success!")
                {
                    await AuthenticationService.Logout();
                }
                error = mess.Message;
            }
            else
            {
                error = "You have different passwords!";
                loading = false;
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }

 }