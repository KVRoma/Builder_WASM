@page "/adminlist"


<h3>Administrator List</h3>

@if (userRegistereds == null)
{
    <p>
        <em>
            <span class="spinner-border spinner-border-sm mr-1"></span>
            Loading...
        </em>
    </p>
}
else
{
    <h5>Count user: @userRegistereds?.Count()</h5>

    <div class="row justify-content-center">
        <div class="col-xl-5 col-lg-7 col-md-9 col-sm-12">
            @foreach (var user in userRegistereds!)
            {
                <SelectCompany UserData=@user
                       Companies=@companies
                       Hiring=@HireCompany(@user.CompanyId)
                       Messages=@GetUserMessage(@user.Id)
                       SaveClickCallback=@UpdateUserRegistered
                       DeleteClickCallback=@DeleteUserRegistered>
                </SelectCompany>
                <p class="mb-2" />
            }
        </div>
    </div>
}


@code
{

    IEnumerable<UserRegistered> userRegistereds = null!;
    IEnumerable<Company> companies = null!;
    IEnumerable<UserMessage> messages = null!;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            userRegistereds = (await HttpService.Get<IEnumerable<UserRegistered>>("api/UserRegistereds")) ?? null!;
            messages = (await HttpService.Get<IEnumerable<UserMessage>>("api/UserMessages")) ?? null!;
            companies = (await HttpService.Get<IEnumerable<Company>>("api/Companies")) ?? null!;
        }
        catch (Exception ex)
        {
            Console.Write(ex.Message);
        }
    }

    async Task UpdateUserRegistered(UserRegistered user)
    {
        string message = await HttpService.Put<string>("api/UserRegistereds/" + user.Id, user);
    }

    async Task DeleteUserRegistered(UserRegistered user)
    {
        userRegistereds = userRegistereds.Where(x => x.Id != user.Id).ToList(); // любий другий варіант не обновлює UI
        var result = await HttpService.Delete<string>("api/UserRegistereds/" + user.Id);
    }
   

    string HireCompany(int? id)
    {        
        return companies?.FirstOrDefault(x => x.Id == id)?.HeaderCompanyName?.ToString()!;
    }

    IEnumerable<UserMessage?> GetUserMessage(int userId)
    {
        var res = messages.Where(x => x.UserRegisteredId == userId)?.OrderBy(x => x.Created) ?? null!;
        return res;
    }
}