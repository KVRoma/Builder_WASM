@page "/adminlist"

<h3>Administrator List</h3>

@if (userRegistereds == null)
{
    <p>
        <em>
            <span class="spinner-border spinner-border-sm mr-1"></span>
            Loading...
        </em>
    </p>
}
else
{
    <h5>Count user: @userRegistereds?.Count()</h5>


    @foreach (var user in userRegistereds!)
    {
        <SelectCompany UserData=@user
               Companies=@companies
               Hiring=@HireCompany(user.CompanyId)
               OnClickCallback=UpdateUserRegistered>
        </SelectCompany>
        <p class="mb-2" />
    }


}


@code
{
    IEnumerable<UserRegistered> userRegistereds = null!;
    IEnumerable<Company> companies = null!;



    protected override async Task OnInitializedAsync()
    {
        try
        {
            userRegistereds = (await HttpService.Get<IEnumerable<UserRegistered>>("api/UserRegistereds")) ?? null!;
            companies = (await HttpService.Get<IEnumerable<Company>>("api/Companies")) ?? null!;
        }
        catch (Exception ex)
        {
            Console.Write(ex.Message);
        }
    }

    async Task UpdateUserRegistered(UserRegistered user)
    {
        string message = await HttpService.Put<string>("api/UserRegistereds/" + user.Id, user);

    }

    private string HireCompany(int? id)
    {
        return companies?.FirstOrDefault(x => x.Id == id)?.HeaderCompanyName?.ToString()!;
    }

}