@page "/estimatelinelist/{Id:int}"

<h3>Estimate Line List  name: @dataGroupe.NameGroupe Id: @dataGroupe.Id </h3>

<div class="row mt-5">
    <Groupe Groupes="groupes" OnChangeCallback="SelectGroupe" placeholder="You can write your answer..." />    
</div>
<div class="row mt-5">
    <Item Items="items" OnChangeCallback="SelectItem" placeholder="You can write your answer..." />
</div>
<div class="row mt-5">
    <Description Descriptions="descriptions" OnChangeCallback="SelectDescription" placeholder="You can write your answer..." />
</div>




@code {
    [Parameter]
    public int Id { get; set; }

    IEnumerable<EstimateLine> lines = new List<EstimateLine>();

    IEnumerable<DGroupe> groupes = new List<DGroupe>();
    IEnumerable<DItem> items = new List<DItem>();
    IEnumerable<DDescription> descriptions = new List<DDescription>();

    DGroupe dataGroupe = new DGroupe();
    DItem dataItem = new DItem();
    DDescription dataDescription = new DDescription();

    EstimateLineType type = EstimateLineType.Material;

    protected override async Task OnInitializedAsync()
    {
        groupes = (await HttpService.GetAPI<IEnumerable<DGroupe>>("api/DGroupes/type/" + type))?.Response!;
        var temp = await HttpService.GetAPI<IEnumerable<EstimateLine>>("api/EstimateLines/estimate/" + Id);
        if (temp.IsSuccessStatusCode)
        {
            lines = temp.Response;
        }
        else
        {
            toastService.ShowToast(temp.Message, ToastLevel.Error);
        }
    }

    async Task SelectGroupe(DGroupe data)
    {
        dataGroupe = data;        
        items = (await HttpService.GetAPI<IEnumerable<DItem>>("api/DItems/groupe/" + data.Id))?.Response!;        
    }

    async Task SelectItem(DItem data)
    {
        dataItem = data;
        descriptions = (await HttpService.GetAPI<IEnumerable<DDescription>>("api/DDescriptions/item/" + data.Id))?.Response!;
    }

    void SelectDescription(DDescription data)
    {
        dataDescription = data;
    }

}
