@page "/CompanySettings/{Id:int?}"

@if (isUserInCompany == "Ok")
{
    <CompanyForm Company=@company
               SaveClickCallback=@SaveCompany>
    </CompanyForm>
}
else if(isUserInCompany == "Load")
{
    <p>
        <em>
            <span class="spinner-border spinner-border-sm mr-1"></span>
            Loading Company...
        </em>
    </p>
}


@code {

    [Parameter]
    public int? Id { get; set; }

    Company company { get; set; } = new Company();

    string isUserInCompany = "Load";
    UserRegistered user = null!;

    protected async override Task OnParametersSetAsync()
    {
        if (AuthenticationService.User.Role == "User")
        {
            if (AuthenticationService.User.CompanyId != null)
            {
                int userId = AuthenticationService.User.Id;
                var temp = await HttpService.GetAPI<UserRegistered>("api/UserRegistereds/" + userId);
                if (temp.IsSuccessStatusCode)
                {
                    isUserInCompany = "Ok";
                    company = temp.Response.Company!;
                    Id = company.Id;
                }
                else
                {
                    toastService.ShowToast(temp.Message, ToastLevel.Error);
                }
            }
            else
            {
                NavigationManager.NavigateTo("/notcompany");
            }

        }
        else if (AuthenticationService.User.Role == "Admin" && Id != null)
        {
            var temp = await HttpService.GetAPI<Company>("api/Companies/" + Id);
            if (temp.IsSuccessStatusCode)
            {
                company = temp.Response;
                isUserInCompany = "Ok";
            }
           
        }
        else if(AuthenticationService.User.Role == "Admin" && Id == null)
        {
            isUserInCompany = "Ok";
        }
    }



    async Task SaveCompany(Company newCompany)
    {
        if (Id == null)
        {
            var temp = await HttpService.PostAPI<Company>("api/Companies", newCompany);            
        }
        else
        {
            newCompany.UserRegistered = new List<UserRegistered>();
            var temp = await HttpService.PutAPI<ResponseMessage>("api/Companies/" + newCompany.Id, newCompany);
            var mes = temp.Response.Message;            
        }

        if (AuthenticationService.User.Role == "Admin")
        {
            NavigationManager.NavigateTo("/companylist");
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }

    }
}
