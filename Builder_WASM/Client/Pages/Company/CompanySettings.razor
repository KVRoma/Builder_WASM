@page "/CompanySettings/{Option:bool?}/{Id:int?}"

@if (isUserInCompany == "Ok")
{
    <CompanyForm Company=@company
               SaveClickCallback=@SaveCompany>
    </CompanyForm>
}
else if(isUserInCompany == "Null")
{
    <div class="h4 text-center fw-bold mt-5">
        Sorry, you are not registered with any company!
    </div>
}
else if(isUserInCompany == "Load")
{
    <p>
        <em>
            <span class="spinner-border spinner-border-sm mr-1"></span>
            Loading Company...
        </em>
    </p>
}


@code {
    [Parameter]
    public bool Option { get; set; } = false;
    [Parameter]
    public int? Id { get; set; }

    Company company { get; set; } = new Company();

    string isUserInCompany = "Load";
    UserRegistered user = null!;

    protected async override Task OnParametersSetAsync()
    {
        if (AuthenticationService.User.Role == "User" && Option == false)
        {
            try
            {
                int userId = AuthenticationService.User.Id;
                user = await HttpService.Get<UserRegistered>("api/UserRegistereds/" + userId);

            }            
            finally
            {                

                if (user.Company == null)
                {
                    isUserInCompany = "Null";
                }
                else
                {
                    isUserInCompany = "Ok";
                    company = user?.Company!;
                }
            }

        }
        else if (AuthenticationService.User.Role == "Admin" && Option == false)
        {
            try
            {
                company = (await HttpService.Get<Company>("api/Companies/" + Id)) ?? null!;
            }
            finally
            {
                isUserInCompany = "Ok";
            }
        }
        else if(AuthenticationService.User.Role == "Admin" && Option == true)
        {
            isUserInCompany = "Ok";
        }
    }



    async Task SaveCompany(Company newCompany)
    {
        if (Option)
        {
            Company comp = await HttpService.Post<Company>("api/Companies", newCompany);
        }
        else
        {
            newCompany.UserRegistered = new List<UserRegistered>();
            ResponseMessage message = await HttpService.Put<ResponseMessage>("api/Companies/" + newCompany.Id, newCompany);
        }

        if (AuthenticationService.User.Role == "Admin")
        {
            NavigationManager.NavigateTo("/companylist");
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }

    }
}
