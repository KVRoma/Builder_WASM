@page "/fetchdata"
@using Builder_WASM.Shared
@using Builder_WASM.Client.Services
@using System.Net.Http.Headers
@using System.Text
@using Builder_WASM.Shared.Models
@inject HttpClient Http
@inject ILocalStorageService LocalStorage

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{  
    <p><em> Load...</em></p>   
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private List<string> mess = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        //AuthenticateResponse resp = await LocalStorage.GetAsync<AuthenticateResponse>("user");

        //var requestMsg = new HttpRequestMessage(HttpMethod.Get, "WeatherForecast");        
        //requestMsg.Headers.Add("Authorization","Bearer " + resp?.Token); 
        //var response = await Http.SendAsync(requestMsg);

        //forecasts = await response.Content.ReadFromJsonAsync<WeatherForecast[]>();    

    }
}
