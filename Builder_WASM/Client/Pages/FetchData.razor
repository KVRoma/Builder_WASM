@page "/fetchdata"
@using System.Net.Http.Headers;


<PageTitle>Page for testing</PageTitle>

<h1>TEST</h1>



    <InputFile class="form-control text-primary fw-bold" OnChange="@HandleSelected" />
    @if (FileUrl != null)
    {
        <div>
            <img src="@FileUrl" style="width:300px" />
        </div>
    }




@code {

    private string test = string.Empty;
    string? _exportUrl = null;

    public string FileUrl { get; set; }
    public FileData fileData { get; set; }


    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        
        IBrowserFile file = e.File;
        string extension = FileExtension(file.Name);
        var buffers = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffers);
        string fileType = file.ContentType;
        string fileUrl = $"data:{fileType};base64,{Convert.ToBase64String(buffers)}";
        FileUrl = fileUrl;
        fileData = new FileData
        {
            Data = buffers,
            FileType = fileType,
            Size = file.Size,
            Extension = extension
        };
       

        var temp = (await HttpService.Post<ResponseMessage>("api/SaveAndLoadFile" + "/path", fileData)).Message;
    }

    private string FileExtension(string name)
    {     
        string[] words = name.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries);
        return words[1];
    }


   
}
